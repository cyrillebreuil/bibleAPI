DROP TABLE IF EXISTS "users",
"logs",
"books",
"chapters",
"translations",
"testamentTranslations",
"bookTranslations",
"verses";

CREATE TABLE "users" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"username" TEXT NOT NULL UNIQUE,
	"password" TEXT NOT NULL,
	"role" TEXT NOT NULL DEFAULT 'user' CHECK (role IN ('admin', 'user')),
	"createdAt" TIMESTAMPTZ NOT NULL DEFAULT NOW (),
	"updatedAt" TIMESTAMPTZ
);

INSERT INTO
	"users" (username, password, role)
VALUES
	('rip', 'ilovetamere', 'admin'),
	('ripuser', 'ilovetamere', 'user');

CREATE TABLE "favorites" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"userId" INTEGER NOT NULL,
	"bookID" TEXT,
	"chapterID" INTEGER,
	"verseID" INTEGER,
	"createdAt" TIMESTAMPTZ NOT NULL DEFAULT NOW (),
	UNIQUE ("userId", "bookID", "chapterID", "verseID")
);

CREATE TABLE "logs" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"userId" TEXT DEFAULT 'anonymous',
	"action" TEXT NOT NULL,
	"path" TEXT,
	"ipAddress" TEXT,
	"userAgent" TEXT,
	"details" JSONB,
	"createdAt" TIMESTAMPTZ NOT NULL DEFAULT NOW ()
);

CREATE TABLE "books" (
	"id" TEXT NOT NULL PRIMARY KEY,
	"isNewTestament" BOOLEAN NOT NULL
);

CREATE TABLE "chapters" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"bookID" TEXT NOT NULL,
	"number" INTEGER NOT NULL,
	UNIQUE ("bookID", "number")
);

CREATE TABLE "translations" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"code" TEXT NOT NULL UNIQUE,
	"name" TEXT NOT NULL,
	"language" TEXT NOT NULL,
	"languageCode" CHAR(3) NOT NULL,
	"regionCode" CHAR(2) NOT NULL
);

CREATE TABLE "testamentTranslations" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"isNewTestament" BOOLEAN NOT NULL,
	"translationID" INTEGER NOT NULL,
	"name" TEXT NOT NULL,
	UNIQUE ("isNewTestament", "translationID")
);

CREATE TABLE "bookTranslations" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"bookID" TEXT NOT NULL,
	"translationID" INTEGER NOT NULL,
	"name" TEXT NOT NULL,
	UNIQUE ("bookID", "translationID")
);

CREATE TABLE "verses" (
	"id" INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	"chapterID" INTEGER NOT NULL,
	"translationID" INTEGER NOT NULL,
	"number" INTEGER NOT NULL,
	"text" TEXT NOT NULL,
	UNIQUE ("chapterID", "translationID", "number")
);

-- Réinitialisation explicite des séquences d'identité
ALTER TABLE "users"
ALTER COLUMN "id"
RESTART WITH 1;

ALTER TABLE "favorites"
ALTER COLUMN "id"
RESTART WITH 1;

ALTER TABLE "logs"
ALTER COLUMN "id"
RESTART WITH 1;

ALTER TABLE "chapters"
ALTER COLUMN "id"
RESTART WITH 1;

ALTER TABLE "translations"
ALTER COLUMN "id"
RESTART WITH 1;

ALTER TABLE "testamentTranslations"
ALTER COLUMN "id"
RESTART WITH 1;

ALTER TABLE "bookTranslations"
ALTER COLUMN "id"
RESTART WITH 1;

ALTER TABLE "verses"
ALTER COLUMN "id"
RESTART WITH 1;

-- Foreign Keys
ALTER TABLE "chapters" ADD FOREIGN KEY ("bookID") REFERENCES "books" ("id");

ALTER TABLE "testamentTranslations" ADD FOREIGN KEY ("translationID") REFERENCES "translations" ("id");

ALTER TABLE "bookTranslations" ADD FOREIGN KEY ("bookID") REFERENCES "books" ("id"),
ADD FOREIGN KEY ("translationID") REFERENCES "translations" ("id");

ALTER TABLE "verses" ADD FOREIGN KEY ("chapterID") REFERENCES "chapters" ("id"),
ADD FOREIGN KEY ("translationID") REFERENCES "translations" ("id");

ALTER TABLE "favorites" ADD FOREIGN KEY ("userId") REFERENCES "users" ("id"),
ADD FOREIGN KEY ("bookID") REFERENCES "books" ("id"),
ADD FOREIGN KEY ("chapterID") REFERENCES "chapters" ("id"),
ADD FOREIGN KEY ("verseID") REFERENCES "verses" ("id");
